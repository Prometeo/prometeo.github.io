<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>orm on Prometeo</title>
    <link>https://prometeo.github.io/tags/orm/</link>
    <description>Recent content in orm on Prometeo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-pe</language>
    <lastBuildDate>Tue, 02 Jun 2020 17:31:21 -0500</lastBuildDate>
    
	<atom:link href="https://prometeo.github.io/tags/orm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>N&#43;1 query problem</title>
      <link>https://prometeo.github.io/posts/n-plus-one-query-problem/</link>
      <pubDate>Tue, 02 Jun 2020 17:31:21 -0500</pubDate>
      
      <guid>https://prometeo.github.io/posts/n-plus-one-query-problem/</guid>
      <description>El N+1 query problem es un problema de performance muy común entre los ORM(Object Relational Mapping). Si tenemos una porción de código que recorre un arreglo y ejecuta un query adicional por cada elemento, entonces podemos decir que estamos frente este problema.
 El término &amp;ldquo;N+1 query problem&amp;rdquo; o &amp;ldquo;N+1 select problem&amp;rdquo; surgió a principios de los 2000 con el uso del ORM Hibernate. La primera referencia a este problema puede ser la que se hace en el libro Java Persistence with Hibernate</description>
    </item>
    
  </channel>
</rss>